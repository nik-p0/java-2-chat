package ru.geekbrains.java_two.network;

import java.net.ServerSocket;
import java.net.Socket;

public interface ServerSocketThreadListener {
    void onServerStart(ServerSocketThread thread);
    void onServerStop(ServerSocketThread thread);
    void onServerSocketCreated(ServerSocketThread thread, ServerSocket server);
    void onServerTimeout(ServerSocketThread thread, ServerSocket server);
    void onServerException(ServerSocketThread thread, Throwable exception);
    void onSocketAccepted(ServerSocketThread thread, ServerSocket server, Socket socket);
}
/*
для закрипления начиная с точки входу в программу ещё раз пройтись по коду.

1)public void onChatServerMessage(String msg) {
SwingUtilities.invokeLater(() -> {
log.append(msg + "\n");
log.setCaretPosition(log.getDocument().getLength());
});
}
Мы зачем эти действия в отдельный поток отправляем или что мы на самом деле пытаемся сделать? Я проверил, вроде без SwingUtilities.invokeLater всё работает.
2) return TYPE_BROADCAST + DELIMITER + System.currentTimeMillis() +
DELIMITER + src + DELIMITER + message
Мы зачем системное время сюда передаём? Я не нашёл где мы его применяем, если же нам надо точное время отправки, то почему бы не применить класс Date?
3)authFail и msgFormatError. В чом вообще смысл им ставить префикс, если мы их просто кидаем клиенту по факту...притом из-за этого клиент(в моей реализации) их ещё и форматировать должен.....почему мы просто не отправим клиенту сразу нормальное сообщение, которое потом повится без форматирования в логе?
4) return set.getString(1);
Почему возвращаем первый элемент, нам же по идее дать должны одно единственное значение, а следовательно индекс "0"....если нет, то что же там под индексом "0"? Я понимаю что работает, но индекс "1" почему?
5)Как вы поставили символ такой интересный "+ и - друг под другом"?
6)Как это теперь всё залить на бесплатный или вообще любой хостинг и заставить работать через интернет?
7)Как шифровать наши сообщения. Имеено любые, не только чат. Ведь если это крестики-нолики, то разве не будет проблемой изменить сообщение отправляемое с клиента?
8)(question)У нас будет последний урок, и как финал, как шикаренейший бонус к завершению Java core 2 : вы советуете рисовать диаграммы для понимания сложных программ с множеством классов и интерфейсов, модулей. Это очень хороший и полезный совет. А вот чтобы теперь это стало значительно более полезным знанием и умением+преимуществом-в конце вебинара устройте, пожалуйста, перерыв 10 мин и ещё один вебинар сразу, чтобы мы умели рисовать общепринятые диаграммы классов, там куча примеров, объяснений всех стрелочек(у меня с этим вообще отдельная проблема). Мы тогда сможем и чужие официальные диаграммы понимать и сами их предоставлять на будущей работе или хотя бы без вранья сказать, что умеем их составлять и читать. Ну мол почему бы сразу не делать эти диаграммы правильно, а не сами изобретать то что только мы и поймём самостоятельно и никому даже не покажешь. Так же здорого после разбора принципа диаграмм классов(стрелочки, прямоугольнички, отношения 1 к 3 и т.д.) нарисовать на уроке диаграмму нашего чата, полную такую симпатичную диаграмму по всем общепринятым правилам. Безусловно я понимаю, что в этой диаграмме мы не станем отображать дальних родственников и скорее всего не стоит рассматривать классы исключений даже.
И таким образом-последний вебинар-королевский вебинар(2 полноценных вебинара в одном!). Люди будут благодарны =)
P.S. задание под * выполнил

Можно ещё разочек концепцию подключения пользователя? (буквально не вдаваясь в подробнсти кода, вот клиент к нам постучался и что происходит)
И про реализацию авторизации пользователя, что в момент попытки авторизации происходит?

Не совсем понятно назначение класса Library.
Как убрать exception при дисконекте? Или при разрыве соединения это нормально?

Пытаюсь разобраться с кодом по вашему методу, все слишком запутано ахахах, переходишь переходишь к методам классам и в какой- то момент начинаешь просто забывать, а что ты вообще узнать то пытался

Думал над вопросами по коду, но на каждый вроде находил ответ. Не могу уложить весь код в голове, точно так не напишу, но при декомпозиции понятно, что откуда и куда.

1.SocketThread.SendMessage(msg); //make it work with Library!   Вот здесь не совсем понял, чего мы пытались добиться с помощью Library, и что все таки нужно попытаться сделать с помощью Library?
2. Непонятно - для чего нужен метод Library.getTypeBroadcast.

1) Почему sendMessage (в SocketThread) boolean?
2) Можно еще раз про ChatServerListener. Почему его реализация в отдельном потоке?

не понимаю каким образом проходит проверка на авторизацию пользователя, логин и пароль. Просьба еще раз объяснить.

1. не смог придумать куда нужно правильно подключить форматирование сообщения, понимаю что в Library, но почему то падает(
2. Вопросы - на какие 10 вопросов нужно ответить что бы считать что успешно прошел курс J2?

Все таки не понятно, почему клиент в вектор добавляется на onSocketReady. В методе run() SocketThread-а событие onSocketReady передается после создания стримов Input/Output. После их создания, наверное, скорее сразу полетят сообщения? А событие onSocketStart передается до создания стримов Input/Output. А событие onSocketAccepted в классе SocketThreadListener отсутствует, она же есть только в ServerSocketThreadListener. Тут еще и понятия событий из SocketThreadListener и ServerSocketThreadListener смешались.

* */